{"version":3,"sources":["Components/ListItem.tsx","Components/ListTotal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["numberWithCommas","x","toString","replace","TotalItem","props","className","confirmed","critical","deaths","recovered","lastChange","lastUpdate","ListTotal","data","map","item","index","App","state","fetch","then","response","json","result","setState","autoPlay","loop","muted","poster","id","src","type","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGA,SAASA,EAAiBC,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAGvD,IAqBeC,EArBG,SAACC,GAAD,OAChB,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,kDACA,oBAAIA,UAAU,kBAAd,SAAiCN,EAAiBK,EAAME,aACxD,iDACA,oBAAID,UAAU,oBAAd,SAAmCN,EAAiBK,EAAMG,YAC1D,yCACA,oBAAIF,UAAU,iBAAd,SAAgCN,EAAiBK,EAAMI,UACvD,4CACA,oBAAIH,UAAU,mBAAd,SAAkCN,EAAiBK,EAAMK,gBAE3D,sBAAKJ,UAAU,cAAf,UACE,8CACA,4BAAID,EAAMM,aACV,8CACA,4BAAIN,EAAMO,oBCHDC,EAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,qBAAKR,UAAU,YAAf,SACGQ,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACN,cAAC,EAAD,CAEEV,UAAWS,EAAKT,UAChBC,SAAUQ,EAAKR,SACfC,OAAQO,EAAKP,OACbE,WAAYK,EAAKL,WACjBC,WAAYI,EAAKJ,WACjBF,UAAWM,EAAKN,WANXO,SC8BAC,E,4MA5BbC,MAAiB,CAEfL,KAAM,I,kEAGa,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAY,EAAKC,SAAS,CAAEX,KAAMU,S,+BAK1C,OACE,sBAAKlB,UAAU,MAAf,UACE,wBAAOoB,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,OAAO,yBAAyBC,GAAG,UAA9D,UACE,wBAAQC,IAJM,gGAIYC,KAAK,cADjC,kDAIA,sBAAK1B,UAAU,UAAf,UACE,kDACA,cAAC,EAAD,CAAWQ,KAAMmB,KAAKd,MAAML,iB,GAtBpBoB,IAAMC,WCKTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4db48a4.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport type { Total } from \"../Types\";\r\n\r\nfunction numberWithCommas(x: Number) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst TotalItem = (props: Total) => (\r\n  <div className='TotalItem'>\r\n    <div className='total'>\r\n      <h3>Confirmed Cases:</h3>\r\n      <h4 className='TotalItem--grey'>{numberWithCommas(props.confirmed)}</h4>\r\n      <h3>Critical Cases:</h3>\r\n      <h4 className='TotalItem--orange'>{numberWithCommas(props.critical)}</h4>\r\n      <h3>Deaths:</h3>\r\n      <h4 className='TotalItem--red'>{numberWithCommas(props.deaths)}</h4>\r\n      <h3>Recovered:</h3>\r\n      <h4 className='TotalItem--green'>{numberWithCommas(props.recovered)}</h4>\r\n    </div>\r\n    <div className='lastUpdated'>\r\n      <p>Last Changed:</p>\r\n      <p>{props.lastChange}</p>\r\n      <p>Last Updated:</p>\r\n      <p>{props.lastUpdate}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TotalItem;\r\n","import * as React from \"react\";\r\nimport type { TotalArr } from \"../Types\";\r\nimport TotalItem from \"./ListItem\";\r\n\r\nconst ListTotal = ({ data }: TotalArr) => (\r\n  <div className=\"ListTotal\">\r\n    {data.map((item, index) => (\r\n        <TotalItem\r\n          key={index}\r\n          confirmed={item.confirmed}\r\n          critical={item.critical}\r\n          deaths={item.deaths}\r\n          lastChange={item.lastChange}\r\n          lastUpdate={item.lastUpdate}\r\n          recovered={item.recovered}\r\n        />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ListTotal;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ListTotal from \"./Components/ListTotal\";\r\nimport type { Total } from \"./Types\";\r\n\r\ntype MyState = {\r\n  data: Total[];\r\n};\r\n\r\nclass App extends React.Component<{}, MyState> {\r\n  state: MyState = {\r\n    // optional second annotation for better type inference\r\n    data: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://covid19-api.com/totals?format=json\")\r\n      .then((response) => response.json())\r\n      .then((result) => this.setState({ data: result }));\r\n  }\r\n\r\n  render() {\r\n    const videoSource = \"https://github.com/thanhz/covid-tracker/blob/master/src/Resources/background.mp4?raw=true#t=1\";\r\n    return (\r\n      <div className='App'>\r\n        <video autoPlay loop muted poster=\"./Resources/poster.jpg\" id='myVideo'>\r\n          <source src={videoSource} type='video/mp4' />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n        <div className='content'>\r\n          <h1>COVID-19 TRACKER</h1>\r\n          <ListTotal data={this.state.data} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
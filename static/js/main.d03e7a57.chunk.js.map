{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","state","data","fetch","then","response","json","result","setState","numberWithCommas","x","toString","replace","className","this","map","item","confirmed","critical","deaths","recovered","lastChange","lastUpdate","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAyDeA,G,kNAzCbC,MAAiB,CAEfC,KAAM,I,kEAGa,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAY,EAAKC,SAAS,CAAEN,KAAMK,S,+BAI1C,SAASE,EAAiBC,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAEvD,OACE,sBAAKC,UAAU,MAAf,UACE,kDACCC,KAAKb,MAAMC,KAAKa,KAAI,SAACC,GACpB,OACE,2CAEE,6BAAKP,EAAiBO,EAAKC,aAF7B,WAIE,6BAAKR,EAAiBO,EAAKE,YAJ7B,SAME,6BAAKT,EAAiBO,EAAKG,UAN7B,YAQE,6BAAKV,EAAiBO,EAAKI,aAR7B,eAUE,6BAAKJ,EAAKK,aAVZ,eAYE,6BAAKL,EAAKM,0B,GAjCNC,IAAMC,YCDTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d03e7a57.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\ntype Data = {\n  confirmed: number;\n  critical: number;\n  deaths: number;\n  lastChange: String;\n  lastUpdate: String;\n  recovered: Number;\n};\n\ntype MyState = {\n  data: Data[];\n};\nclass App extends React.Component<{}, MyState> {\n  state: MyState = {\n    // optional second annotation for better type inference\n    data: [],\n  };\n\n  componentDidMount() {\n    fetch(\"https://covid19-api.com/totals?format=json\")\n      .then((response) => response.json())\n      .then((result) => this.setState({ data: result }));\n  }\n\n  render() {\n    function numberWithCommas(x: Number) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    return (\n      <div className='App'>\n        <h1>COVID-19 TRACKER</h1>\n        {this.state.data.map((item) => {\n          return (\n            <ul>\n              Confirmed\n              <li>{numberWithCommas(item.confirmed)}</li>\n              Critical\n              <li>{numberWithCommas(item.critical)}</li>\n              Deaths\n              <li>{numberWithCommas(item.deaths)}</li>\n              Recovered\n              <li>{numberWithCommas(item.recovered)}</li>\n              Last Changed\n              <li>{item.lastChange}</li>\n              Last Updated\n              <li>{item.lastUpdate}</li>\n            </ul>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}